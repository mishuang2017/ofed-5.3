From: Valentine Fatiev <valentinef@mellanox.com>
Subject: [PATCH] BACKPORT: drivers/net/ethernet/mellanox/mlx5/core/crdump.c

Change-Id: I3f10dc62cbbdbd6f03c9fca5d660af2e67e64415
---
 drivers/net/ethernet/mellanox/mlx5/core/crdump.c | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/crdump.c b/drivers/net/ethernet/mellanox/mlx5/core/crdump.c
index xxxxxxx..xxxxxxx 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/crdump.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/crdump.c
@@ -156,23 +156,31 @@ static int mlx5_crdump_open(struct inode *inode, struct file *file)
 {
 	struct seq_file *seq;
 	int ret;
-
 	ret = seq_open(file, &mlx5_crdump_seq_ops);
 	if (ret)
 		return ret;
 
 	seq = file->private_data;
 	seq->private = PDE_DATA(inode);
-
 	return 0;
 }
 
+#ifdef HAVE_PROC_OPS_STRUCT
 static const struct proc_ops  mlx5_crdump_ops = {
 	.proc_open    = mlx5_crdump_open,
 	.proc_read    = seq_read,
 	.proc_lseek  = seq_lseek,
 	.proc_release = seq_release
 };
+#else
+static const struct file_operations mlx5_crdump_fops = {
+        .owner   = THIS_MODULE,
+        .open    = mlx5_crdump_open,
+        .read    = seq_read,
+        .llseek  = seq_lseek,
+        .release = seq_release
+};
+#endif
 
 int mlx5_cr_protected_capture(struct mlx5_core_dev *dev)
 {
@@ -281,7 +289,11 @@ int mlx5_crdump_init(struct mlx5_core_dev *dev)
 
 	if (mlx5_crdump_dir)
 		if (!proc_create_data(pci_name(dev->pdev), S_IRUGO,
+#ifdef HAVE_PROC_OPS_STRUCT
 				      mlx5_crdump_dir, &mlx5_crdump_ops,
+#else
+				      mlx5_crdump_dir, &mlx5_crdump_fops,
+#endif
 				      crdump)) {
 			pr_warn("failed creating proc file\n");
 			goto clean_mem;
